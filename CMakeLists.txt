cmake_minimum_required(VERSION 3.13)

project(memilio-simulations VERSION 1.0.0)

if(NOT DEFINED NUM_JOBS_BUILD)
  set(NUM_JOBS_BUILD "1")
endif()
option(BUILD_2020_npis_sarscov2_wildtype_germany "Build simulations from folder 2020_npis_sarscov2_wildtype_germany." OFF)
option(BUILD_2021_vaccination_sarscov2_delta_germany "Build simulations from folder 2021_vaccination_sarscov2_delta_germany." OFF)
option(BUILD_munich_graph_sim "Build simulations from folder munich_graph_sim." OFF)
option(BUILD_2024_Ploetzke_Linear_Chain_Trick "Build simulations from folder 2024_Ploetzke_Linear_Chain_Trick." OFF)

# We require the library hdf5 for all targets.
find_package(HDF5 REQUIRED)

if(BUILD_2020_npis_sarscov2_wildtype_germany)
  if(NOT EXISTS "${CMAKE_SOURCE_DIR}/2020_npis_sarscov2_wildtype_germany/build")
    execute_process(COMMAND mkdir "build/" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2020_npis_sarscov2_wildtype_germany")
  endif()
  execute_process(COMMAND cmake ".." WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2020_npis_sarscov2_wildtype_germany/build")
  execute_process(COMMAND cmake "--build" "." "-j${NUM_JOBS_BUILD}" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2020_npis_sarscov2_wildtype_germany/build")
endif()

if(BUILD_2021_vaccination_sarscov2_delta_germany)
  if(NOT EXISTS "${CMAKE_SOURCE_DIR}/2021_vaccination_sarscov2_delta_germany/build")
    execute_process(COMMAND mkdir "build/" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2021_vaccination_sarscov2_delta_germany")
  endif()
  execute_process(COMMAND cmake ".." WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2021_vaccination_sarscov2_delta_germany/build")
  execute_process(COMMAND cmake "--build" "." "-j${NUM_JOBS_BUILD}" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2021_vaccination_sarscov2_delta_germany/build")
endif()

if(BUILD_munich_graph_sim)
  if(NOT EXISTS "${CMAKE_SOURCE_DIR}/munich_graph_sim/build")
    execute_process(COMMAND mkdir "build/" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/munich_graph_sim")
  endif()
  execute_process(COMMAND cmake ".." WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/munich_graph_sim/build")
  execute_process(COMMAND cmake "--build" "." "-j${NUM_JOBS_BUILD}" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/munich_graph_sim/build")
endif()

if(BUILD_2024_Ploetzke_Linear_Chain_Trick)
  if(NOT EXISTS "${CMAKE_SOURCE_DIR}/2024_Ploetzke_Linear_Chain_Trick/build")
    execute_process(COMMAND mkdir "build/" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2024_Ploetzke_Linear_Chain_Trick")
  endif()
  execute_process(COMMAND cmake ".." WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2024_Ploetzke_Linear_Chain_Trick/build")
  execute_process(COMMAND cmake "--build" "." "-j${NUM_JOBS_BUILD}" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/2024_Ploetzke_Linear_Chain_Trick/build")
endif()
